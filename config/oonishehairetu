/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>  // üñ± „Éû„Ç¶„Çπ„Éú„Çø„É≥„ÇÑÁßªÂãï„Éª„Çπ„ÇØ„É≠„Éº„É´„ÅÆÂÆöÁæ©


#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
  macros {
    compatible = "zmk,macros";

    macro_win1 {
      label = "WIN+1";
      bindings = <&kp LGUI &kp N1>;
    };
    macro_win2 {
      label = "WIN+2";
      bindings = <&kp LGUI &kp N2>;
    };
    macro_win3 {
      label = "WIN+3";
      bindings = <&kp LGUI &kp N3>;
    };
    macro_win4 {
      label = "WIN+4";
      bindings = <&kp LGUI &kp N4>;
    };
    macro_win5 {
      label = "WIN+5";
      bindings = <&kp LGUI &kp N5>;
    };
    macro_win6 {
      label = "WIN+6";
      bindings = <&kp LGUI &kp N6>;
    };
    macro_win7 {
      label = "WIN+7";
      bindings = <&kp LGUI &kp N7>;
    };
    macro_win8 {
      label = "WIN+8";
      bindings = <&kp LGUI &kp N8>;
    };
    macro_win9 {
      label = "WIN+9";
      bindings = <&kp LGUI &kp N9>;
    };
    macro_win0 {
      label = "WIN+0";
      bindings = <&kp LGUI &kp N0>;
    };
    macro_scrnN {
      label = "SCRN_N";
      bindings = <&kp LSHFT &kp LCTRL &kp LALT &kp N>;
    };

    macro_scrnH {
      label = "SCRN_H";
      bindings = <&kp LSHFT &kp LCTRL &kp LALT &kp H>;
    };

    macro_altesc {
      label = "ALT_ESC";
      bindings = <&kp LALT &kp ESC>;
    };

    macro_altf4 {
      label = "ALT_F4";
      bindings = <&kp LALT &kp F4>;
    };

    macro_winv {
      label = "WIN_V";
      bindings = <&kp LGUI &kp V>;
    };

    macro_senter {
      label = "S_ENTER";
      bindings = <&kp LSHFT &kp ENTER>;
    };

    macro_ctrls {
      label = "CTRL_S";
      bindings = <&kp LCTRL &kp S>;
    };

    macro_ctrlc {
      label = "CTRL_C";
      bindings = <&kp LCTRL &kp C>;
    };

    macro_ctrlv {
      label = "CTRL_V";
      bindings = <&kp LCTRL &kp V>;
    };
}; 

// Activate ADJUST layer by pressing raise and lower
};

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
behaviors {
    ht_b300: hold_tap_b300 {
        compatible = "zmk,behavior-hold-tap";
        label = "B_Hold300";
        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "tap-preferred";
    };

    ht_caps_lctl: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "CAPS_LCTL";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_f17_lalt: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "F17_LALT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_f15_raise: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "F15_RAISE";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_f14_lalt: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "F14_LALT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_space_raise: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "SPACE_RAISE";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_tab_raise: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "TAB_RAISE";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_esc_adjust: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "ESC_ADJUST";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_win_v_adjust: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "WINV_ADJUST";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    ht_sftent_ctrl: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "SFTENT_CTRL";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };
};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |


bindings = <
  &macro_win1       &macro_win2       &macro_win3       &macro_win4       &macro_win5       &macro_win6
  &ht_esc_adjust    &kp Q             &kp L             &kp U             &kp COMMA         &kp DOT
  &ht_caps_ctrl     &kp E             &kp I             &kp A             &kp O             &kp MINUS
  &kp LSHFT         &kp Z             &kp X             &kp C             &kp V             &kp BSPC
  &macro_ctrlk      &kp LGUI          &ht_f17_lalt      &ht_tab_raise     &ht_space_lower   &ht_ctrlc_adjust

  &macro_win7       &macro_scrnN      &macro_scrnH      &macro_altesc     &kp PSCRN         &macro_altf4
  &kp F             &kp W             &kp R             &kp Y             &kp P             &ht_win_v_ctrl
  &kp K             &kp T             &kp N             &kp S             &kp H             &ht_senter_ctrl
  &mkp LCLK         &kp BSPC          &kp G             &kp D             &kp M             &kp J
  &ht_b300          &kp RET           &ht_space_lower   &ht_f15_raise     &ht_f14_lalt      &kp RGUI
>;

};

 encoder_left: encoder_left {
    compatible = "zmk,behavior-rotary-encoder";
    label = "ENC_L";
    #binding-cells = <2>;
    bindings = <&kp PG_UP>, <&kp PG_DN>;
  };

  sensor-left {
    compatible = "zmk,sensor-rotary-encoder";
    label = "SENSOR_L";
    sensor-type = "rotary-encoder";
    rotate-cw = <&encoder_left 0>;
    rotate-ccw = <&encoder_left 1>;
  };

  sensor-right {
    compatible = "zmk,sensor-joystick";
    label = "SENSOR_R";
    sensor-type = "joystick";
    x-axis-pos = <&mouse_move_x 10>;
    x-axis-neg = <&mouse_move_x -10>;
    y-axis-pos = <&mouse_move_y -10>;
    y-axis-neg = <&mouse_move_y 10>;
  };


sensor-bindings = <&sensor-left &sensor-right>;
 
lower_layer {
    label = "lower";

    bindings = <
    // Â∑¶Êâã 1„Äú29
    &trans        &trans        &trans        &trans        &trans        &trans
    &kp COLON     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5
    &trans        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
    &trans        &kp LBKT      &kp RBKT      &kp LPAR      &kp RPAR      &trans
    &macro_ctrls  &trans        &trans        &trans        &trans

    // Âè≥Êâã 30„Äú58
    &trans        &trans        &trans        &trans        &trans        &trans
    &kp HOME      &kp PG_UP     &kp SLASH     &kp UP        &kp TILDE     &kp DEL
    &kp END       &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &trans
    &trans        &kp QMARK     &kp EXCL      &kp EQUAL     &kp MINUS     &trans
    &trans        &trans        &macro_ctrlc  &macro_ctrlv  &trans
    >;
};

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

bindings = <
  // Â∑¶Êâã 1„Äú29
  &trans        &trans        &trans        &trans        &trans        &trans
  &kp CALC      &kp BSLH      &kp AT        &kp HASH       &kp SQT       &kp DQT
  &trans        &kp PIPE      &kp UNDERSCORE &kp PERCENT   &kp GRAVE     &kp CARET
  &trans        &kp SEMI      &kp DOLLAR    &kp AMPS       &kp ASTERISK  &trans
  &trans        &trans        &trans        &trans         &trans

  // Âè≥Êâã 30„Äú58
  &trans        &trans        &trans        &trans         &trans        &trans
  &trans        &kp LBRC      &kp RBRC      &trans         &trans        &trans
  &trans        &kp PLUS      &kp MINUS     &trans         &trans        &trans
  &trans        &trans        &trans        &trans         &trans        &trans
  &trans        &trans        &trans        &trans         &trans
>;

            
        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";

bindings = <
  // Â∑¶Êâã 1„Äú29
  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD
  &trans           &kp F1           &kp F2           &kp F3           &kp F4           &kp F5
  &trans           &kp F6           &kp F7           &kp F8           &kp F9           &kp F0
  &trans           &kp F11          &kp F12          &trans           &trans           &trans
  &trans           &trans           &trans           &trans           &trans

  // Âè≥Êâã 30„Äú58
  &rgb_ug RGB_EFF  &trans           &trans           &trans           &trans           &trans
  &rgb_ug RGB_TOG  &trans           &kp C_MUTE       &kp C_VOL_UP     &kp C_BRI_UP     &trans
  &ext_power EP_TOG &trans          &trans           &trans           &kp C_VOL_DN     &kp C_BRI_DN
  &trans           &trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_CLR
  &trans           &trans           &trans           &trans           &trans
>;
        };
    };
};

